// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    182,
    35,
    129,
    231,
    89,
    83,
    13,
    162,
    134,
    226,
    34,
    77,
    111,
    73,
    87,
    24,
    189,
    152,
    26,
    71,
    148,
    177,
    189,
    195,
    112,
    146,
    203,
    222,
    34,
    3,
    47,
    121,
    9,
    1,
    159,
    40,
    245,
    149,
    176,
    9,
    51,
    237,
    81,
    141,
    182,
    58,
    180,
    17,
    148,
    67,
    21,
    252,
    150,
    175,
    21,
    166,
    175,
    10,
    216,
    67,
    168,
    154,
    143,
    152,
    129,
    21,
    192,
    148,
    223,
    100,
    43,
    12,
    210,
    118,
    129,
    106,
    30,
    166,
    199,
    69,
    225,
    227,
    158,
    191,
    109,
    138,
    171,
    65,
    131,
    237,
    29,
    15,
    52,
    77,
    24,
    214,
    105,
    28,
    228,
    131,
    121,
    173,
    243,
    125,
    255,
    245,
    234,
    245,
    46,
    180,
    209,
    106,
    27,
    221,
    193,
    68,
    31,
    67,
    108,
    242,
    164,
    222,
    42,
    56,
    81,
    222,
    27,
    9,
    212,
    22,
    95,
    190,
    3,
    244,
    52,
    144,
    66,
    90,
    12,
    66,
    239,
    104,
    101,
    227,
    223,
    236,
    79,
    75,
    105,
    200,
    99,
    181,
    120,
    101,
    34,
    29,
    98,
    43,
    167,
    94,
    38,
    147,
    177,
    212,
    148,
    49,
    134,
    63,
    197,
    226,
    232,
    205,
    227,
    130,
    26,
    183,
    252,
    4,
    116,
    1,
    206,
    14,
    180,
    239,
    239,
    175,
    238,
    175,
    39,
    92,
    233,
    152,
    209,
    13,
    62,
    223,
    147,
    243,
    90,
    210,
    57,
    103,
    37,
    74,
    101,
    206,
    67,
    230,
    4,
    220,
    141,
    48,
    172,
    63,
    159,
    63,
    71,
    80,
    59,
    35,
    225,
    173,
    30,
    166,
    181,
    9,
    137,
    53,
    95,
    28,
    155,
    135,
    219,
    176,
    238,
    89,
    247,
    109,
    147,
    189,
    163,
    121,
    171,
    238,
    79,
    199,
    82,
    181,
    240,
    138,
    10,
    108,
    186,
    72,
    162,
    10,
    216,
    224,
    168,
    71,
    38,
    43,
    209,
    109,
    197,
    40,
    223,
    129,
    140,
    62,
    40,
    58,
    30,
    99,
    3,
    0,
    119,
    32,
    219,
    249,
    79,
    150,
    3,
    211,
    232,
    103,
    1,
    126,
    62,
    4,
    105,
    198,
    139,
    143,
    189,
    37,
    19,
    111,
    224,
    133,
    139,
    4,
    115,
    73,
    52,
    94,
    109,
    64,
    252,
    160,
    94,
    71,
    52,
    175,
    218,
    164,
    68,
    218,
    176,
    254,
    40,
    224,
    175,
    4,
    62,
    45,
    56,
    118,
    191,
    203,
    249,
    86,
    145,
    145,
    74,
    122,
    82,
    35,
    37,
    52,
    0,
    243,
    66,
    192,
    38,
    190,
    3,
    67,
    199,
    244,
    188,
    114,
    86,
    205,
    96,
    5,
    148,
    17,
    23,
    146,
    167,
    103,
    10,
    6,
    242,
    83,
    253,
    24,
    196,
    86,
    164,
    135,
    132,
    141,
    41,
    39,
    165,
    99,
    138,
    219,
    141,
    52,
    78,
    210,
    46,
    14,
    145,
    156,
    30,
    199,
    119,
    18,
    13,
    184,
    241,
    252,
    194,
    96,
    220,
    106,
    229,
    218,
    158,
    142,
    163,
    200,
    145,
    183,
    12,
    91,
    26,
    7,
    55,
    253,
    189,
    1,
    251,
    66,
    116,
    55,
    105,
    22,
    215,
    81,
    222,
    41,
    199,
    168,
    208,
    131,
    6,
    66,
    68,
    176,
    55,
    45,
    22,
    13,
    188,
    219,
    53,
    130,
    242,
    182,
    166,
    44,
    14,
    219,
    70,
    105,
    246,
    16,
    71,
    149,
    2,
    214,
    96,
    32,
    211,
    247,
    189,
    153,
    77,
    92,
    151,
    160,
    121,
    248,
    163,
    58,
    131,
    77,
    59,
    172,
    24,
    89,
    26,
    97,
    95,
    195,
    87,
    28,
    99,
    175,
    118,
    252,
    207,
    247,
    144,
    222,
    134,
    130,
    31,
    78,
    134,
    71,
    218,
    15,
    52,
    145,
    158,
    52,
    64,
    153,
    178,
    47,
    182,
    245,
    58,
    63,
    225,
    160,
    63,
    80,
    95,
    104,
    128,
    216,
    56,
    8,
    253,
    30,
    194,
    27,
    37,
    212,
    100,
    241,
    190,
    140,
    1,
    2,
    194,
    120,
    179,
    222,
    109,
    83,
    2,
    148,
    171,
    158,
    125,
    87,
    113,
    12,
    185,
    157,
    83,
    0,
    215,
    117,
    204,
    2,
    82,
    36,
    209,
    134,
    161,
    70,
    36,
    189,
    74,
    145,
    78,
    110,
    35,
    64,
    180,
    107,
    209,
    79,
    166,
    20,
    100,
    70,
    42,
    113,
    198,
    42,
    155,
    22,
    106,
    89,
    94,
    99,
    24,
    214,
    240,
    198,
    248,
    120,
    214,
    224,
    151,
    36,
    235,
    33,
    43,
    51,
    53,
    48,
    114,
    234,
    26,
    185,
    131,
    52,
    100,
    141,
    198,
    226,
    203,
    115,
    51,
    59,
    169,
    146,
    254,
    136,
    200,
    83,
    140,
    114,
    160,
    37,
    229,
    30,
    239,
    217,
    173,
    14,
    156,
    219,
    64,
    104,
    121,
    156,
    7,
    251,
    8,
    127,
    115,
    100,
    121,
    63,
    58,
    23,
    194,
    253,
    216,
    66,
    16,
    251,
    215,
    112,
    214,
    57,
    68,
    205,
    79,
    135,
    250,
    114,
    109,
    128,
    34,
    226,
    45,
    92,
    48,
    184,
    205,
    28,
    94,
    226,
    80,
    182,
    157,
    153,
    254,
    96,
    69,
    220,
    208,
    68,
    147,
    219,
    89,
    106,
    185,
    61,
    113,
    108,
    100,
    149,
    245,
    23,
    104,
    95,
    215,
    87,
    237,
    206,
    28,
    66,
    148,
    228,
    44,
    200,
    6,
    199,
    249,
    242,
    4,
    38,
    13,
    248,
    183,
    115,
    171,
    110,
    90,
    255,
    197,
    182,
    66,
    70,
    98,
    247,
    131,
    233,
    70,
    85,
    52,
    99,
    178,
    241,
    193,
    196,
    84,
    24,
    224,
    216,
    189,
    80,
    211,
    162,
    25,
    23,
    50,
    173,
    110,
    68,
    41,
    160,
    16,
    42,
    134,
    211,
    163,
    84,
    247,
    194,
    28,
    244,
    77,
    12,
    60,
    186,
    186,
    197,
    134,
    162,
    83,
    42,
    249,
    77,
    175,
    243,
    87,
    231,
    118,
    22,
    143,
    99,
    86,
    85,
    132,
    204,
    44,
    177,
    46,
    42,
    114,
    154,
    222,
    236,
    69,
    228,
    58,
    13,
    1,
    53,
    231,
    149,
    45,
    60,
    84,
    132,
    198,
    186,
    226,
    133,
    25,
    43,
    243,
    254,
    183,
    230,
    55,
    230,
    211,
    10,
    223,
    113,
    134,
    16,
    26,
    241,
    133,
    103,
    104,
    163,
    33,
    246,
    39,
    99,
    191,
    1,
    172,
    103,
    212,
    142,
    156,
    95,
    149,
    171,
    109,
    210,
    108,
    119,
    73,
    91,
    100,
    49,
    82,
    151,
    22,
    115,
    104,
    69,
    77,
    141,
    36,
    252,
    66,
    137,
    185,
    225,
    119,
    67,
    109,
    128,
    80,
    117,
    133,
    211,
    232,
    191,
    40,
    164,
    253,
    42,
    103,
    164,
    252,
    32,
    50,
    66,
    79,
    226,
    145,
    164,
    51,
    122,
    208,
    195,
    214,
    213,
    163,
    118,
    26,
    114,
    221,
    248,
    66,
    115,
    237,
    29,
    191,
    167,
    92,
    72,
    130,
    201,
    130,
    152,
    29,
    72,
    207,
    171,
    242,
    189,
    58,
    160,
    214,
    141,
    210,
    159,
    231,
    127,
    163,
    97,
    231,
    189,
    251,
    44,
    193,
    176,
    124,
    58,
    65,
    132,
    129,
    109,
    93,
    232,
    36,
    142,
    92,
    19,
    208,
    0,
    45,
    102,
    7,
    66,
    53,
    159,
    176,
    20,
    30,
    60,
    47,
    167,
    178,
    39,
    209,
    127,
    80,
    174,
    80,
    130,
    142,
    132,
    136,
    211,
    182,
    88,
    234,
    123,
    142,
    195,
    53,
    245,
    144,
    60,
    94,
    71,
    143,
    207,
    231,
    97,
    150,
    208,
    41,
    71,
    144,
    205,
    175,
    16,
    82,
    15,
    162,
    210,
    197,
    64,
    51,
    202,
    0,
    29,
    71,
    121,
    158,
    17,
    54,
    37,
    161,
    97,
    68,
    1,
    231,
    169,
    36,
    67,
    219,
    161,
    196,
    66,
    186,
    189,
    222,
    164,
    89,
    71,
    136,
    106,
    143,
    111,
    221,
    70,
    199,
    247,
    99,
    6,
    246,
    5,
    96,
    133,
    198,
    67,
    16,
    119,
    91,
    97,
    95,
    166,
    186,
    205,
    249,
    31,
    8,
    162,
    48,
    236,
    47,
    136,
    65,
    92,
    133,
    54,
    112,
    184,
    156,
    2,
    140,
    224,
    184,
    137,
    100,
    175,
    185,
    78,
    210,
    151,
    86,
    240,
    164,
    90,
    122,
    235,
    17,
    187,
    3,
    113,
    207,
    193,
    192,
    83,
    103,
    21,
    199,
    208,
    194,
    88,
    231,
    132,
    250,
    177,
    128,
    37,
    6,
    240,
    207,
    197,
    196,
    80,
    1,
    37,
    228,
    167,
    224,
    41,
    255,
    81,
    198,
    100,
    198,
    167,
    68,
    214,
    8,
    51,
    16,
    160,
    204,
    244,
    112,
    196,
    228,
    243,
    139,
    125,
    187,
    114,
    167,
    156,
    109,
    228,
    74,
    53,
    225,
    230,
    198,
    57,
    141,
    55,
    18,
    4,
    242,
    11,
    211,
    78,
    144,
    108,
    164,
    49,
    255,
    100,
    162,
    6,
    94,
    80,
    236,
    22,
    182,
    9,
    9,
    80,
    208,
    136,
    56,
    78,
    255,
    194,
    60,
    201,
    136,
    207,
    85,
    228,
    70,
    127,
    231,
    6,
    12,
    33,
    149,
    82,
    202,
    8,
    6,
    141,
    58,
    26,
    53,
    131,
    136,
    134,
    118,
    158,
    137,
    84,
    198,
    2,
    108,
    200,
    89,
    148,
    202,
    145,
    184,
    50,
    199,
    40,
    124,
    109,
    28,
    234,
    55,
    62,
    117,
    139,
    200,
    249,
    182,
    49,
    83,
    57,
    19,
    253,
    174,
    19,
    29,
    77,
    233,
    93,
    2,
    229,
    96,
    148,
    245,
    30,
    3,
    119,
    74,
    150,
    9,
    101,
    45,
    119,
    71,
    139
  ]);
  @override
  String get devSupabaseUrl => _get('DEV_SUPABASE_URL');

  @override
  String get devSupabaseKey => _get('DEV_SUPABASE_KEY');

  @override
  String get stageSupabaseUrl => _get('STAGE_SUPABASE_URL');

  @override
  String get stageSupabaseKey => _get('STAGE_SUPABASE_KEY');

  @override
  String get prodSupabaseUrl => _get('PROD_SUPABASE_URL');

  @override
  String get prodSupabaseKey => _get('PROD_SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
