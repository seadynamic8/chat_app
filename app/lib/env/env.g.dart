// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    100,
    33,
    171,
    131,
    71,
    92,
    41,
    91,
    13,
    248,
    9,
    208,
    70,
    158,
    58,
    58,
    191,
    192,
    228,
    215,
    133,
    194,
    206,
    224,
    86,
    174,
    208,
    113,
    236,
    242,
    82,
    153,
    63,
    214,
    26,
    29,
    141,
    177,
    226,
    114,
    77,
    125,
    183,
    182,
    103,
    114,
    78,
    218,
    156,
    249,
    88,
    151,
    50,
    154,
    29,
    70,
    128,
    69,
    64,
    110,
    105,
    210,
    4,
    115,
    194,
    161,
    0,
    123,
    128,
    3,
    42,
    46,
    126,
    173,
    61,
    246,
    253,
    72,
    125,
    151,
    75,
    234,
    251,
    86,
    216,
    215,
    45,
    221,
    20,
    237,
    10,
    45,
    158,
    192,
    57,
    32,
    116,
    26,
    200,
    126,
    69,
    66,
    222,
    209,
    185,
    34,
    155,
    48,
    6,
    16,
    99,
    120,
    85,
    187,
    224,
    253,
    26,
    17,
    107,
    144,
    24,
    116,
    235,
    6,
    148,
    175,
    5,
    150,
    172,
    194,
    157,
    43,
    91,
    18,
    126,
    187,
    168,
    92,
    136,
    206,
    252,
    217,
    85,
    57,
    36,
    27,
    19,
    46,
    44,
    39,
    76,
    162,
    242,
    194,
    169,
    80,
    82,
    149,
    155,
    22,
    32,
    166,
    92,
    147,
    163,
    50,
    170,
    142,
    139,
    171,
    239,
    48,
    145,
    211,
    138,
    118,
    108,
    20,
    75,
    218,
    76,
    112,
    3,
    188,
    67,
    36,
    227,
    179,
    126,
    85,
    219,
    14,
    103,
    76,
    81,
    2,
    75,
    209,
    222,
    50,
    104,
    34,
    250,
    33,
    62,
    22,
    15,
    1,
    187,
    78,
    36,
    19,
    90,
    57,
    56,
    88,
    127,
    144,
    56,
    85,
    51,
    198,
    120,
    47,
    63,
    176,
    155,
    189,
    92,
    20,
    161,
    185,
    254,
    65,
    171,
    117,
    18,
    152,
    128,
    189,
    211,
    219,
    197,
    111,
    79,
    243,
    77,
    51,
    75,
    180,
    72,
    10,
    227,
    210,
    154,
    152,
    180,
    164,
    161,
    179,
    134,
    60,
    113,
    240,
    225,
    4,
    94,
    164,
    118,
    117,
    143,
    1,
    124,
    143,
    159,
    246,
    188,
    72,
    10,
    89,
    27,
    1,
    194,
    35,
    105,
    66,
    96,
    51,
    134,
    67,
    198,
    227,
    161,
    3,
    18,
    129,
    198,
    26,
    56,
    174,
    163,
    178,
    86,
    54,
    182,
    68,
    231,
    254,
    123,
    172,
    71,
    0,
    1,
    128,
    102,
    167,
    250,
    93,
    205,
    39,
    177,
    133,
    4,
    13,
    247,
    240,
    249,
    101,
    133,
    107,
    246,
    228,
    219,
    232,
    93,
    87,
    246,
    86,
    159,
    229,
    179,
    59,
    40,
    237,
    165,
    128,
    157,
    141,
    164,
    179,
    101,
    206,
    220,
    119,
    207,
    99,
    137,
    205,
    240,
    63,
    149,
    54,
    62,
    183,
    147,
    63,
    127,
    155,
    156,
    104,
    133,
    112,
    234,
    113,
    205,
    212,
    84,
    223,
    108,
    28,
    16,
    106,
    134,
    84,
    53,
    196,
    50,
    184,
    72,
    204,
    59,
    20,
    1,
    188,
    235,
    199,
    91,
    7,
    213,
    3,
    166,
    158,
    37,
    130,
    114,
    63,
    57,
    139,
    199,
    62,
    247,
    56,
    14,
    221,
    47,
    247,
    135,
    251,
    16,
    27,
    25,
    178,
    1,
    92,
    81,
    226,
    225,
    32,
    97,
    237,
    168,
    254
  ]);
  @override
  String get supabaseUrl => _get('SUPABASE_URL');

  @override
  String get supabaseKey => _get('SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
