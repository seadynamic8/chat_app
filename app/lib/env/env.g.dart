// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    100,
    220,
    93,
    6,
    226,
    83,
    80,
    10,
    112,
    11,
    89,
    161,
    157,
    162,
    19,
    199,
    226,
    165,
    55,
    88,
    237,
    232,
    120,
    11,
    74,
    126,
    158,
    19,
    15,
    10,
    31,
    234,
    125,
    19,
    238,
    253,
    54,
    150,
    73,
    164,
    188,
    193,
    213,
    136,
    12,
    50,
    161,
    157,
    43,
    166,
    37,
    82,
    246,
    132,
    196,
    95,
    116,
    190,
    123,
    61,
    252,
    32,
    45,
    223,
    80,
    120,
    95,
    108,
    225,
    142,
    87,
    62,
    110,
    159,
    216,
    63,
    244,
    4,
    87,
    30,
    185,
    107,
    116,
    75,
    148,
    231,
    37,
    77,
    109,
    114,
    136,
    168,
    44,
    49,
    152,
    248,
    139,
    231,
    61,
    98,
    199,
    168,
    7,
    170,
    40,
    235,
    225,
    153,
    233,
    200,
    40,
    142,
    42,
    238,
    68,
    33,
    93,
    118,
    109,
    195,
    105,
    76,
    138,
    230,
    1,
    180,
    124,
    12,
    163,
    124,
    152,
    108,
    168,
    203,
    231,
    13,
    121,
    169,
    246,
    40,
    57,
    5,
    213,
    30,
    108,
    80,
    83,
    108,
    120,
    34,
    242,
    104,
    202,
    150,
    115,
    244,
    116,
    32,
    81,
    242,
    61,
    149,
    155,
    139,
    106,
    32,
    105,
    210,
    7,
    44,
    62,
    238,
    94,
    227,
    102,
    130,
    137,
    103,
    16,
    134,
    111,
    13,
    191,
    56,
    97,
    13,
    205,
    55,
    60,
    215,
    63,
    48,
    175,
    183,
    3,
    54,
    93,
    100,
    44,
    56,
    180,
    173,
    120,
    231,
    169,
    148,
    207,
    14,
    4,
    19,
    255,
    195,
    133,
    211,
    168,
    132,
    50,
    56,
    70,
    150,
    36,
    173,
    234,
    68,
    249,
    88,
    230,
    73,
    68,
    63,
    60,
    70,
    34,
    240,
    81,
    142,
    114,
    33,
    68,
    117,
    251,
    241,
    242,
    19,
    96,
    11,
    29,
    144,
    214,
    182,
    73,
    120,
    202,
    180,
    212,
    249,
    63,
    148,
    148,
    252,
    12,
    250,
    203,
    129,
    176,
    183,
    91,
    36,
    127,
    53,
    95,
    91,
    218,
    197,
    205,
    26,
    254,
    149,
    146,
    103,
    71,
    160,
    226,
    20,
    95,
    227,
    131,
    114,
    2,
    252,
    187,
    162,
    244,
    17,
    182,
    224,
    83,
    89,
    22,
    23,
    175,
    6,
    190,
    39,
    30,
    149,
    52,
    122,
    151,
    157,
    201,
    62,
    107,
    21,
    66,
    176,
    41,
    234,
    233,
    20,
    122,
    247,
    230,
    37,
    17,
    215,
    179,
    170,
    249,
    193,
    121,
    151,
    29,
    202,
    82,
    241,
    145,
    62,
    84,
    87,
    4,
    143,
    77,
    212,
    52,
    116,
    141,
    18,
    199,
    63,
    46,
    117,
    3,
    162,
    100,
    18,
    15,
    4,
    76,
    158,
    245,
    78,
    131,
    14,
    102,
    144,
    73,
    127,
    94,
    86,
    59,
    107,
    8,
    111,
    229,
    124,
    174,
    199,
    248,
    105,
    79,
    54,
    196,
    204,
    115,
    191,
    245,
    240,
    88,
    67,
    53,
    30,
    142,
    253,
    30,
    206,
    139,
    65,
    153,
    18,
    112,
    87,
    223,
    120,
    21,
    214,
    235,
    118,
    208,
    174,
    167,
    248,
    194,
    217,
    228,
    48,
    56,
    237,
    98,
    174,
    150,
    50,
    88,
    58,
    240,
    173,
    216,
    159,
    39,
    101,
    175,
    36,
    157,
    173,
    228,
    228,
    188,
    158,
    48,
    38,
    242,
    35,
    204,
    103,
    217,
    239,
    106,
    210,
    44,
    11,
    189,
    231,
    73,
    217,
    245,
    144,
    163,
    197,
    249,
    37,
    230,
    224,
    240,
    159,
    111,
    29,
    248,
    128,
    33,
    27,
    241,
    0,
    109,
    184,
    13,
    4,
    217,
    85,
    247,
    255,
    119,
    117,
    80,
    180,
    252,
    62,
    56,
    87,
    42,
    241,
    133,
    101,
    75,
    167,
    86,
    90,
    44,
    160,
    139,
    42,
    247,
    196,
    183,
    112,
    36,
    120,
    21,
    39,
    65,
    182,
    27,
    118,
    117,
    153,
    63,
    88,
    105,
    226,
    2,
    41,
    192,
    170,
    234,
    48,
    236,
    54,
    133,
    207,
    91,
    167,
    53,
    88,
    156,
    187,
    124,
    219,
    145,
    124,
    173,
    196,
    249,
    169,
    92,
    146,
    108,
    78,
    34,
    218,
    31,
    241,
    117,
    162,
    161,
    169,
    65,
    188,
    202,
    52,
    192,
    89,
    82,
    226,
    161,
    138,
    132,
    3,
    20,
    109,
    117,
    152,
    157,
    37,
    166,
    139,
    14,
    226,
    97,
    44,
    30,
    48,
    216,
    44,
    36,
    81,
    178,
    115,
    26,
    126,
    222,
    229,
    31,
    12,
    179,
    230,
    162,
    183,
    19,
    60,
    189,
    148,
    220,
    24,
    128,
    53,
    18,
    244,
    15,
    151,
    130,
    204,
    204,
    176,
    119,
    177,
    37,
    15,
    92,
    31,
    218,
    214,
    34,
    65,
    128,
    252,
    25,
    85,
    190,
    187,
    219,
    228,
    5,
    31,
    90,
    117,
    224,
    52,
    224,
    98,
    180,
    201,
    78,
    42,
    1,
    43,
    178,
    136,
    236,
    96,
    170,
    130,
    177,
    22,
    104,
    229,
    124,
    136,
    247,
    163,
    179,
    75,
    148,
    83,
    224,
    43,
    0,
    249,
    141,
    202,
    226,
    202,
    107,
    214,
    226,
    245,
    2,
    196,
    227,
    67,
    164,
    143,
    194,
    34,
    85,
    185,
    192,
    138,
    159,
    157,
    192,
    119,
    231,
    163,
    74,
    164,
    231,
    32,
    197,
    77,
    140,
    245,
    88,
    100,
    248,
    8,
    25,
    226,
    108,
    94,
    116,
    37,
    251,
    216,
    217,
    42,
    1,
    248,
    42,
    204,
    56,
    228,
    84,
    46,
    57,
    71,
    201,
    150,
    53,
    218,
    197,
    126,
    88,
    104,
    32,
    252,
    23,
    136,
    41,
    120,
    219,
    201,
    255,
    210,
    22,
    175,
    229,
    161,
    80,
    47,
    47,
    149,
    128,
    23,
    167,
    30,
    208,
    114,
    82,
    68,
    77,
    104,
    165,
    183,
    143,
    157,
    177,
    231,
    119,
    55,
    162,
    67,
    69,
    19,
    53,
    6,
    240,
    26,
    199,
    12,
    54,
    13,
    220,
    133,
    158,
    17,
    149,
    106,
    179,
    99,
    5,
    80,
    183,
    212,
    247,
    233,
    206,
    250,
    140,
    125,
    189,
    149,
    145,
    225,
    79,
    81,
    109,
    4,
    112,
    110,
    54,
    52,
    52,
    64,
    115,
    172,
    80,
    82,
    27,
    78,
    119,
    174,
    40,
    78,
    5,
    189,
    3,
    47,
    106,
    96,
    37,
    12,
    155,
    47,
    151,
    74,
    34,
    6,
    103,
    143,
    232,
    59,
    0,
    226,
    251,
    7,
    124,
    29,
    7,
    248,
    44,
    53,
    99,
    122,
    37,
    185,
    203,
    54,
    157,
    49,
    1,
    83,
    212,
    231,
    11,
    148,
    20,
    136,
    207,
    23,
    175,
    106,
    197,
    184,
    2,
    151,
    79,
    232,
    254,
    127,
    227,
    69,
    12,
    101,
    238,
    163,
    82,
    102,
    232,
    217,
    97,
    135,
    84,
    210,
    111,
    119,
    54,
    207,
    236,
    168,
    135,
    98,
    120,
    6,
    200,
    96,
    77,
    233,
    177,
    160,
    172,
    147,
    110,
    75,
    33,
    167,
    165,
    176,
    151,
    93,
    58,
    239,
    76,
    30,
    53,
    182,
    177,
    185,
    90,
    209,
    240,
    164,
    59,
    188,
    67,
    108,
    49,
    98,
    8,
    171,
    187,
    47,
    105,
    16,
    150,
    117,
    101,
    119,
    165,
    84,
    148,
    143,
    210,
    126,
    55,
    23,
    141,
    145,
    213,
    113,
    174,
    131,
    226,
    229,
    69,
    216,
    90,
    39,
    212,
    1,
    210,
    19,
    57,
    161,
    28,
    202,
    129,
    232,
    240,
    223,
    130,
    62,
    31,
    85,
    177,
    13,
    109,
    253,
    199,
    221,
    36,
    95,
    76,
    44,
    181,
    12,
    7,
    62,
    89,
    199,
    104,
    119,
    135,
    8,
    129,
    120,
    208,
    126,
    118,
    134,
    34,
    143,
    142,
    19,
    195,
    92,
    20,
    60,
    78,
    229,
    176,
    95,
    158,
    240,
    32,
    70,
    145,
    105,
    223,
    35,
    78,
    17,
    86,
    103,
    61,
    108,
    217,
    190,
    93,
    76,
    171,
    193,
    193,
    191,
    96,
    24,
    173,
    163,
    158,
    40,
    228,
    134,
    116,
    103,
    133,
    85,
    37,
    163,
    213,
    16,
    206,
    250,
    207,
    203,
    55,
    252,
    88,
    107,
    228,
    190,
    142,
    8,
    110,
    215,
    241,
    153,
    149,
    61,
    67,
    104,
    97,
    62,
    165,
    186,
    109,
    85,
    226,
    60,
    224,
    185,
    59,
    222,
    33,
    217,
    154,
    98,
    217,
    120,
    145,
    144,
    107,
    203,
    86,
    63,
    222,
    131,
    185,
    71,
    20,
    203,
    182,
    187,
    31,
    226,
    136,
    9,
    141,
    243,
    173,
    197,
    172,
    45,
    77,
    36,
    207,
    54,
    6,
    171,
    255,
    85,
    42,
    187,
    115,
    149,
    121,
    26,
    32,
    253,
    4,
    113,
    116,
    170,
    49,
    126,
    66,
    101,
    239,
    226,
    146,
    48,
    137,
    127,
    150,
    163,
    233,
    142,
    24,
    113,
    44,
    98,
    51,
    207,
    83,
    108,
    135,
    128,
    203,
    81,
    1,
    5,
    125,
    103,
    205,
    236,
    155,
    189,
    188,
    110,
    26,
    226,
    43,
    69,
    8,
    123,
    185,
    106,
    69,
    82,
    182,
    13,
    130,
    188,
    122,
    249,
    249,
    3,
    188,
    6,
    90,
    184,
    230,
    68,
    167,
    68,
    139,
    114,
    114,
    94,
    107,
    198,
    27,
    205,
    19,
    213,
    30,
    19,
    143,
    221,
    223,
    111,
    90,
    9,
    254,
    143,
    153,
    218,
    102,
    250,
    2,
    9,
    42,
    72,
    190,
    35,
    112,
    105,
    121,
    184,
    163,
    42,
    81,
    186,
    46,
    157,
    254,
    48,
    145,
    215,
    87,
    243,
    141,
    251,
    60,
    131,
    203,
    8,
    113,
    253,
    72,
    173,
    91,
    65,
    68,
    162,
    230,
    244
  ]);
  @override
  String get devSupabaseUrl => _get('DEV_SUPABASE_URL');

  @override
  String get devSupabaseKey => _get('DEV_SUPABASE_KEY');

  @override
  String get stageSupabaseUrl => _get('STAGE_SUPABASE_URL');

  @override
  String get stageSupabaseKey => _get('STAGE_SUPABASE_KEY');

  @override
  String get prodSupabaseUrl => _get('PROD_SUPABASE_URL');

  @override
  String get prodSupabaseKey => _get('PROD_SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
