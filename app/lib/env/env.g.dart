// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    175,
    155,
    176,
    141,
    245,
    218,
    50,
    56,
    127,
    25,
    212,
    7,
    218,
    190,
    10,
    38,
    144,
    184,
    3,
    4,
    142,
    117,
    66,
    86,
    101,
    163,
    26,
    249,
    111,
    150,
    177,
    197,
    235,
    184,
    176,
    190,
    80,
    171,
    245,
    255,
    242,
    203,
    222,
    191,
    83,
    154,
    106,
    48,
    125,
    194,
    32,
    63,
    240,
    64,
    22,
    14,
    23,
    166,
    141,
    36,
    28,
    65,
    254,
    185,
    93,
    226,
    171,
    193,
    210,
    63,
    254,
    120,
    202,
    42,
    40,
    47,
    225,
    137,
    170,
    198,
    29,
    166,
    50,
    12,
    252,
    229,
    140,
    121,
    238,
    12,
    8,
    237,
    176,
    47,
    202,
    189,
    145,
    50,
    178,
    78,
    165,
    72,
    73,
    110,
    135,
    161,
    36,
    185,
    176,
    119,
    163,
    191,
    165,
    19,
    226,
    44,
    64,
    45,
    223,
    220,
    108,
    208,
    130,
    57,
    181,
    102,
    147,
    95,
    55,
    180,
    104,
    177,
    23,
    122,
    118,
    245,
    82,
    250,
    37,
    98,
    219,
    34,
    146,
    36,
    80,
    32,
    195,
    31,
    8,
    186,
    169,
    32,
    137,
    123,
    187,
    241,
    224,
    117,
    43,
    106,
    44,
    177,
    21,
    17,
    32,
    254,
    199,
    136,
    83,
    108,
    173,
    207,
    249,
    22,
    16,
    7,
    52,
    202,
    210,
    154,
    108,
    50,
    233,
    91,
    128,
    252,
    10,
    142,
    139,
    204,
    158,
    42,
    76,
    69,
    58,
    31,
    210,
    212,
    176,
    39,
    237,
    165,
    241,
    4,
    11,
    255,
    68,
    214,
    136,
    184,
    118,
    95,
    53,
    142,
    181,
    36,
    118,
    139,
    63,
    72,
    172,
    130,
    20,
    121,
    110,
    37,
    203,
    195,
    199,
    237,
    189,
    180,
    4,
    101,
    189,
    121,
    25,
    110,
    29,
    207,
    162,
    16,
    43,
    154,
    68,
    4,
    161,
    209,
    227,
    141,
    122,
    113,
    227,
    135,
    198,
    164,
    59,
    168,
    35,
    72,
    187,
    195,
    235,
    219,
    180,
    231,
    8,
    137,
    142,
    83,
    144,
    153,
    209,
    7,
    17,
    33,
    140,
    140,
    45,
    19,
    124,
    234,
    36,
    249,
    67,
    97,
    206,
    255,
    12,
    110,
    227,
    28,
    8,
    192,
    68,
    60,
    211,
    85,
    63,
    11,
    43,
    236,
    101,
    73,
    253,
    53,
    75,
    161,
    248,
    13,
    46,
    70,
    129,
    24,
    91,
    43,
    52,
    111,
    175,
    195,
    191,
    46,
    190,
    131,
    152,
    76,
    33,
    144,
    153,
    121,
    53,
    160,
    212,
    239,
    116,
    180,
    152,
    11,
    58,
    75,
    240,
    115,
    55,
    245,
    88,
    221,
    214,
    154,
    17,
    227,
    51,
    201,
    62,
    215,
    28,
    107,
    7,
    142,
    128,
    169,
    162,
    120,
    1,
    184,
    127,
    240,
    194,
    92,
    193,
    177,
    55,
    235,
    254,
    84,
    255,
    96,
    149,
    245,
    224,
    169,
    69,
    195,
    42,
    66,
    144,
    3,
    215,
    234,
    161,
    77,
    186,
    71,
    171,
    142,
    62,
    76,
    37,
    240,
    64,
    61,
    255,
    51,
    252,
    38,
    74,
    128,
    255,
    154,
    169,
    51,
    237,
    41,
    216,
    205,
    176,
    163,
    53,
    217,
    91,
    11,
    165,
    170,
    224,
    149,
    113,
    17,
    119,
    94,
    6,
    238,
    77,
    80
  ]);
  @override
  String get supabaseUrl => _get('SUPABASE_URL');

  @override
  String get supabaseKey => _get('SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
