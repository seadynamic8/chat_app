// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    113,
    247,
    19,
    192,
    83,
    7,
    185,
    6,
    133,
    2,
    180,
    95,
    69,
    37,
    12,
    38,
    62,
    99,
    32,
    106,
    111,
    79,
    85,
    213,
    170,
    135,
    136,
    97,
    84,
    253,
    211,
    213,
    66,
    92,
    143,
    219,
    97,
    168,
    242,
    73,
    16,
    80,
    49,
    95,
    174,
    96,
    187,
    70,
    247,
    188,
    219,
    40,
    226,
    97,
    239,
    174,
    75,
    210,
    15,
    11,
    131,
    217,
    23,
    241,
    47,
    174,
    54,
    6,
    51,
    3,
    0,
    100,
    179,
    61,
    142,
    72,
    108,
    172,
    139,
    139,
    79,
    105,
    81,
    97,
    48,
    221,
    235,
    145,
    201,
    86,
    129,
    222,
    5,
    192,
    176,
    239,
    40,
    58,
    158,
    117,
    239,
    238,
    216,
    203,
    201,
    166,
    1,
    194,
    120,
    236,
    55,
    219,
    33,
    60,
    24,
    29,
    194,
    141,
    161,
    86,
    42,
    209,
    231,
    81,
    63,
    194,
    163,
    181,
    39,
    44,
    212,
    152,
    231,
    75,
    134,
    126,
    4,
    163,
    239,
    82,
    106,
    120,
    208,
    179,
    93,
    145,
    199,
    98,
    89,
    195,
    112,
    31,
    102,
    229,
    225,
    57,
    227,
    150,
    195,
    34,
    20,
    112,
    59,
    176,
    84,
    21,
    23,
    56,
    84,
    131,
    105,
    190,
    115,
    228,
    146,
    55,
    68,
    25,
    71,
    170,
    32,
    132,
    41,
    82,
    241,
    172,
    223,
    156,
    99,
    78,
    204,
    214,
    75,
    180,
    178,
    111,
    206,
    205,
    102,
    102,
    212,
    204,
    226,
    190,
    85,
    220,
    71,
    12,
    128,
    166,
    203,
    121,
    146,
    188,
    124,
    227,
    38,
    239,
    54,
    69,
    244,
    217,
    219,
    245,
    199,
    143,
    202,
    190,
    14,
    183,
    132,
    106,
    166,
    58,
    130,
    16,
    19,
    250,
    61,
    47,
    219,
    76,
    102,
    248,
    37,
    55,
    29,
    50,
    26,
    96,
    108,
    217,
    135,
    26,
    88,
    221,
    188,
    240,
    54,
    92,
    3,
    64,
    217,
    121,
    66,
    102,
    173,
    129,
    173,
    188,
    153,
    107,
    222,
    222,
    64,
    209,
    57,
    167,
    50,
    165,
    91,
    9,
    164,
    238,
    185,
    38,
    137,
    230,
    13,
    233,
    226,
    56,
    251,
    132,
    136,
    219,
    87,
    72,
    137,
    215,
    105,
    213,
    216,
    224,
    222,
    157,
    85,
    191,
    38,
    215,
    34,
    140,
    48,
    153,
    58,
    151,
    77,
    159,
    10,
    220,
    139,
    209,
    5,
    235,
    104,
    25,
    35,
    38,
    95,
    127,
    14,
    38,
    170,
    182,
    210,
    228,
    193,
    80,
    159,
    205,
    198,
    111,
    204,
    29,
    179,
    180,
    115,
    198,
    57,
    205,
    97,
    40,
    24,
    42,
    209,
    218,
    232,
    66,
    253,
    108,
    215,
    130,
    119,
    232,
    113,
    236,
    137,
    242,
    215,
    132,
    101,
    132,
    182,
    16,
    183,
    235,
    240,
    87,
    241,
    147,
    227,
    200,
    36,
    153,
    52,
    233,
    9,
    222,
    128,
    212,
    15,
    82,
    237,
    16,
    37,
    21,
    157,
    35,
    175,
    171,
    172,
    66,
    123,
    60,
    153,
    252,
    52,
    15,
    114,
    205,
    177,
    52,
    126,
    124,
    51,
    47,
    150,
    22,
    26,
    186,
    63,
    31,
    249,
    165,
    242,
    36,
    131,
    3,
    166,
    145,
    218,
    26
  ]);
  @override
  String get supabaseUrl => _get('SUPABASE_URL');

  @override
  String get supabaseKey => _get('SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
