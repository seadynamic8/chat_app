// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    79,
    236,
    30,
    93,
    60,
    59,
    103,
    158,
    211,
    149,
    71,
    115,
    45,
    174,
    136,
    116,
    177,
    215,
    6,
    243,
    109,
    127,
    86,
    108,
    14,
    136,
    229,
    219,
    137,
    4,
    211,
    235,
    204,
    58,
    234,
    34,
    32,
    165,
    98,
    18,
    181,
    52,
    104,
    5,
    73,
    164,
    63,
    133,
    87,
    246,
    111,
    41,
    159,
    167,
    91,
    46,
    66,
    3,
    192,
    6,
    129,
    2,
    74,
    59,
    160,
    144,
    149,
    198,
    8,
    55,
    244,
    59,
    133,
    28,
    79,
    241,
    246,
    129,
    179,
    77,
    115,
    38,
    9,
    47,
    176,
    69,
    255,
    87,
    192,
    247,
    186,
    135,
    32,
    133,
    102,
    88,
    246,
    77,
    121,
    167,
    19,
    43,
    249,
    170,
    121,
    20,
    218,
    25,
    84,
    16,
    171,
    192,
    230,
    244,
    156,
    226,
    47,
    229,
    152,
    83,
    127,
    186,
    46,
    44,
    187,
    237,
    108,
    44,
    255,
    208,
    53,
    197,
    99,
    44,
    76,
    252,
    177,
    55,
    82,
    201,
    182,
    173,
    240,
    113,
    230,
    106,
    16,
    145,
    247,
    163,
    180,
    26,
    201,
    47,
    180,
    83,
    7,
    41,
    131,
    137,
    64,
    175,
    88,
    101,
    157,
    109,
    60,
    131,
    148,
    116,
    141,
    107,
    32,
    65,
    79,
    85,
    119,
    60,
    166,
    45,
    225,
    109,
    147,
    97,
    25,
    28,
    3,
    159,
    208,
    227,
    104,
    208,
    138,
    17,
    208,
    195,
    217,
    54,
    2,
    148,
    46,
    104,
    168,
    157,
    95,
    177,
    79,
    0,
    15,
    15,
    184,
    116,
    139,
    3,
    4,
    75,
    149,
    95,
    6,
    39,
    112,
    53,
    145,
    102,
    166,
    132,
    187,
    251,
    229,
    27,
    225,
    189,
    190,
    54,
    45,
    196,
    171,
    247,
    119,
    28,
    135,
    153,
    65,
    181,
    146,
    35,
    206,
    137,
    181,
    42,
    184,
    243,
    41,
    1,
    173,
    102,
    191,
    224,
    60,
    64,
    51,
    245,
    55,
    210,
    249,
    50,
    78,
    249,
    228,
    102,
    137,
    243,
    70,
    111,
    208,
    249,
    236,
    32,
    14,
    65,
    73,
    113,
    105,
    210,
    86,
    183,
    161,
    15,
    185,
    153,
    44,
    156,
    226,
    240,
    73,
    191,
    25,
    120,
    39,
    173,
    221,
    25,
    242,
    166,
    44,
    140,
    138,
    71,
    208,
    159,
    212,
    58,
    56,
    119,
    37,
    142,
    255,
    169,
    95,
    200,
    157,
    243,
    61,
    169,
    17,
    64,
    23,
    130,
    39,
    224,
    16,
    91,
    223,
    222,
    194,
    236,
    44,
    222,
    61,
    239,
    233,
    103,
    254,
    113,
    1,
    205,
    103,
    33,
    181,
    31,
    200,
    183,
    238,
    93,
    244,
    23,
    119,
    205,
    249,
    228,
    151,
    68,
    179,
    100,
    173,
    75,
    241,
    152,
    17,
    89,
    128,
    212,
    136,
    196,
    141,
    173,
    157,
    255,
    88,
    40,
    130,
    97,
    93,
    59,
    3,
    240,
    74,
    28,
    225,
    206,
    142,
    141,
    44,
    160,
    222,
    241,
    162,
    181,
    55,
    246,
    149,
    50,
    174,
    53,
    246,
    17,
    110,
    148,
    13,
    190,
    91,
    100,
    208,
    83,
    32,
    95,
    234,
    62,
    249,
    208,
    168,
    106,
    157,
    5,
    185,
    123,
    157,
    59,
    80,
    183,
    110,
    157,
    154,
    232,
    155,
    90,
    56,
    185,
    237,
    47,
    180,
    104,
    44,
    71,
    87,
    42,
    157,
    112,
    85,
    35,
    134,
    146,
    231,
    142,
    42,
    141,
    252,
    84,
    247,
    227,
    41,
    147,
    46,
    94,
    189,
    171,
    176,
    233,
    155,
    57,
    57,
    196,
    197,
    220,
    78,
    97,
    112,
    112,
    148,
    149,
    133,
    155,
    68,
    103,
    125,
    171,
    211,
    190,
    212,
    114,
    1,
    155,
    81,
    109,
    99,
    178,
    134,
    251,
    42,
    192,
    21,
    63,
    103,
    214,
    203,
    40,
    163,
    233,
    95,
    173,
    121,
    95,
    201,
    41,
    121,
    125,
    28,
    129,
    38,
    108,
    55,
    235,
    162,
    33,
    112,
    74,
    76,
    107,
    136,
    111,
    185,
    38,
    220,
    155,
    45,
    155,
    123,
    172,
    180,
    207,
    116,
    34,
    113,
    200,
    242,
    36,
    16,
    15,
    192,
    49,
    80,
    234,
    73,
    198,
    58,
    226,
    221,
    124,
    79,
    207,
    144,
    65,
    113,
    103,
    15,
    49,
    190,
    109,
    208,
    150,
    106,
    191,
    235,
    204,
    207,
    191,
    58,
    191,
    207,
    218,
    194,
    45,
    10,
    100,
    150,
    253,
    157,
    112,
    235,
    244,
    94,
    52,
    206,
    183,
    82,
    135,
    201,
    0,
    226,
    214,
    66,
    109,
    207,
    150,
    94,
    12,
    170,
    7,
    196,
    92,
    58,
    15,
    17,
    113,
    173,
    248,
    220,
    167,
    119,
    90,
    139,
    228,
    101,
    144,
    118,
    27,
    92,
    61,
    88,
    188,
    9,
    119,
    85,
    128,
    208,
    116,
    65,
    40,
    165,
    48,
    219,
    243,
    158,
    65,
    249,
    124,
    135,
    58,
    154,
    46,
    90,
    117,
    50,
    249,
    86,
    7,
    129,
    252,
    163,
    144,
    0,
    80,
    125,
    72,
    137,
    93,
    130,
    32,
    113,
    100,
    90,
    185,
    202,
    238,
    221,
    50,
    99,
    181,
    195,
    234,
    2,
    66,
    122,
    132,
    58,
    164,
    246,
    185,
    187,
    109,
    161,
    137,
    91,
    222,
    20,
    156,
    42,
    45,
    200,
    250,
    168,
    153,
    199,
    2,
    13,
    0,
    115,
    252,
    100,
    227,
    124,
    229,
    77,
    12,
    44,
    166,
    61,
    224,
    21,
    104,
    13,
    41,
    78,
    67,
    146,
    29,
    57,
    237,
    132,
    44,
    36,
    212,
    228,
    60,
    154,
    102,
    185,
    58,
    23,
    191,
    93,
    108,
    103,
    119,
    190,
    44,
    230,
    178,
    83,
    243,
    44,
    215,
    115,
    153,
    46,
    224,
    171,
    142,
    234,
    182,
    157,
    187,
    75,
    236,
    80,
    87,
    220,
    85,
    103,
    192,
    109,
    119,
    117,
    95,
    233,
    107,
    219,
    28,
    98,
    207,
    73,
    72,
    246,
    151,
    187,
    5,
    87,
    57,
    142,
    191,
    94,
    252,
    46,
    73,
    212,
    15,
    9,
    111,
    151,
    151,
    92,
    198,
    117,
    51,
    183,
    43,
    83,
    206,
    225,
    235,
    144,
    121,
    247,
    48,
    95,
    36,
    124,
    154,
    88,
    31,
    191,
    181,
    235,
    1,
    181,
    94,
    9,
    150,
    59,
    0,
    63,
    221,
    131,
    143,
    174,
    26,
    215,
    218,
    32,
    213,
    19,
    108,
    178,
    21,
    40,
    173,
    202,
    93,
    99,
    191,
    19,
    98,
    22,
    159,
    93,
    177,
    167,
    214,
    135,
    166,
    20,
    201,
    209,
    125,
    24,
    143,
    92,
    192,
    187,
    81,
    179,
    6,
    164,
    5,
    162,
    68,
    11,
    11,
    49,
    94,
    233,
    165,
    8,
    5,
    113,
    199,
    57,
    129,
    150,
    163,
    109,
    178,
    81,
    55,
    170,
    20,
    206,
    29,
    113,
    244,
    62,
    190,
    224,
    199,
    44,
    124,
    119,
    17,
    243,
    15,
    94,
    151,
    214,
    18,
    169,
    186,
    188,
    252,
    231,
    45,
    81,
    59,
    55,
    216,
    208,
    97,
    100,
    35,
    38,
    192,
    124,
    46,
    196,
    138,
    206,
    27,
    9,
    209,
    193,
    106,
    152,
    148,
    10,
    121,
    214,
    217,
    213,
    25,
    140,
    187,
    136,
    175,
    168,
    251,
    137,
    44,
    101,
    106,
    223,
    229,
    176,
    10,
    196,
    138,
    90,
    206,
    211,
    192,
    152,
    110,
    30,
    114,
    108,
    147,
    36,
    239,
    97,
    216,
    173,
    90,
    136,
    160,
    220,
    38,
    87,
    121,
    250,
    82,
    49,
    236,
    204,
    220,
    106,
    108,
    73,
    181,
    238,
    231,
    143,
    95,
    195,
    208,
    63,
    18,
    245,
    25,
    232,
    6,
    38,
    148,
    171,
    173,
    40,
    47,
    236,
    138,
    162,
    103,
    181,
    220,
    59,
    251,
    241,
    157,
    39,
    63,
    15,
    28,
    7,
    119,
    102,
    33,
    0,
    42,
    55,
    118,
    35,
    133,
    106,
    131,
    57,
    148,
    7,
    129,
    246,
    149,
    191,
    111,
    101,
    160,
    32,
    79,
    74,
    170,
    251,
    249,
    21,
    69,
    1,
    134,
    147,
    69,
    170,
    234,
    215,
    229,
    202,
    45,
    221,
    156,
    43,
    130,
    39,
    126,
    135,
    33,
    171,
    192,
    126,
    210,
    68,
    192,
    18,
    215,
    128,
    40,
    78,
    80,
    215,
    87,
    243,
    6,
    127,
    134,
    55,
    85,
    125,
    214,
    157,
    221,
    109,
    13,
    46,
    184,
    196,
    125,
    149,
    175,
    163,
    7,
    194,
    105,
    56,
    218,
    209,
    237,
    73,
    13,
    204,
    87,
    163,
    93,
    56,
    143,
    48,
    122,
    166,
    33,
    214,
    191,
    49,
    12,
    56,
    20,
    72,
    137,
    223,
    103,
    24,
    82,
    207,
    82,
    246,
    91,
    3,
    114,
    135,
    108,
    229,
    174,
    83,
    225,
    37,
    115,
    131,
    72,
    39,
    97,
    77,
    151,
    116,
    45,
    123,
    62,
    117,
    45,
    80,
    207,
    75,
    130,
    45,
    134,
    65,
    130,
    15,
    12,
    217,
    247,
    158,
    193,
    228,
    41,
    187,
    232,
    182,
    13,
    238,
    165,
    2,
    65,
    80,
    218,
    165,
    247,
    103,
    28,
    189,
    182,
    46,
    51,
    71,
    51,
    185,
    112,
    156,
    10,
    140,
    10,
    145,
    36,
    240,
    154,
    237,
    38,
    243,
    136,
    70,
    76,
    104,
    21,
    175,
    87,
    113,
    165,
    103,
    9,
    28,
    83,
    65,
    28,
    131,
    86,
    228,
    233,
    129,
    64,
    221,
    193,
    32,
    48,
    110,
    246,
    253,
    184,
    138,
    175,
    84,
    73,
    135,
    152,
    229,
    218,
    232,
    229,
    23,
    153,
    71,
    225,
    28,
    2,
    10,
    145,
    123,
    64
  ]);
  @override
  String get devSupabaseUrl => _get('DEV_SUPABASE_URL');

  @override
  String get devSupabaseKey => _get('DEV_SUPABASE_KEY');

  @override
  String get stageSupabaseUrl => _get('STAGE_SUPABASE_URL');

  @override
  String get stageSupabaseKey => _get('STAGE_SUPABASE_KEY');

  @override
  String get prodSupabaseUrl => _get('PROD_SUPABASE_URL');

  @override
  String get prodSupabaseKey => _get('PROD_SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
