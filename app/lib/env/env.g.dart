// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'env.dart';

// **************************************************************************
// SecureDotEnvAnnotationGenerator
// **************************************************************************

class _$Env extends Env {
  const _$Env(this._encryptionKey, this._iv) : super._();

  final String _encryptionKey;
  final String _iv;
  static final Uint8List _encryptedValues = Uint8List.fromList([
    95,
    56,
    155,
    62,
    64,
    37,
    80,
    240,
    114,
    137,
    234,
    231,
    33,
    57,
    135,
    55,
    24,
    163,
    156,
    241,
    73,
    79,
    121,
    19,
    158,
    237,
    80,
    80,
    143,
    140,
    12,
    29,
    76,
    248,
    195,
    248,
    198,
    196,
    75,
    17,
    202,
    103,
    66,
    57,
    58,
    209,
    217,
    73,
    231,
    111,
    189,
    208,
    218,
    144,
    208,
    201,
    187,
    0,
    35,
    146,
    36,
    14,
    123,
    64,
    245,
    236,
    101,
    80,
    118,
    3,
    92,
    78,
    31,
    154,
    36,
    165,
    193,
    193,
    145,
    189,
    62,
    166,
    174,
    117,
    93,
    222,
    195,
    214,
    177,
    202,
    20,
    138,
    8,
    59,
    9,
    138,
    29,
    216,
    251,
    19,
    194,
    192,
    160,
    137,
    193,
    110,
    252,
    6,
    243,
    57,
    81,
    52,
    57,
    246,
    106,
    220,
    255,
    218,
    116,
    11,
    129,
    92,
    230,
    135,
    169,
    20,
    188,
    176,
    43,
    50,
    203,
    16,
    72,
    207,
    44,
    159,
    66,
    86,
    180,
    2,
    52,
    147,
    9,
    169,
    142,
    152,
    81,
    234,
    255,
    195,
    119,
    142,
    206,
    199,
    122,
    16,
    34,
    213,
    6,
    198,
    26,
    175,
    204,
    148,
    79,
    228,
    124,
    69,
    130,
    234,
    122,
    11,
    220,
    216,
    142,
    242,
    66,
    160,
    156,
    32,
    242,
    97,
    120,
    237,
    190,
    36,
    46,
    239,
    88,
    4,
    91,
    245,
    213,
    111,
    201,
    9,
    83,
    232,
    85,
    206,
    210,
    236,
    143,
    128,
    228,
    236,
    251,
    151,
    149,
    2,
    146,
    130,
    73,
    255,
    88,
    51,
    254,
    244,
    58,
    207,
    174,
    49,
    29,
    163,
    170,
    57,
    149,
    145,
    36,
    38,
    159,
    124,
    154,
    47,
    198,
    123,
    132,
    20,
    9,
    86,
    110,
    79,
    118,
    177,
    249,
    14,
    17,
    133,
    168,
    9,
    31,
    181,
    2,
    115,
    215,
    82,
    105,
    183,
    133,
    11,
    194,
    209,
    163,
    153,
    57,
    80,
    121,
    171,
    178,
    70,
    154,
    209,
    53,
    230,
    178,
    215,
    202,
    205,
    186,
    204,
    193,
    23,
    228,
    120,
    125,
    154,
    237,
    134,
    136,
    158,
    88,
    8,
    254,
    113,
    76,
    51,
    55,
    58,
    245,
    176,
    91,
    94,
    129,
    1,
    100,
    1,
    158,
    171,
    11,
    241,
    115,
    22,
    74,
    120,
    187,
    150,
    124,
    244,
    156,
    33,
    70,
    196,
    113,
    22,
    236,
    231,
    29,
    255,
    17,
    87,
    174,
    216,
    53,
    50,
    132,
    44,
    106,
    156,
    78,
    1,
    155,
    188,
    53,
    13,
    31,
    88,
    122,
    100,
    96,
    162,
    102,
    17,
    188,
    2,
    162,
    127,
    81,
    141,
    146,
    143,
    50,
    216,
    187,
    4,
    72,
    43,
    4,
    104,
    103,
    48,
    147,
    244,
    30,
    128,
    22,
    78,
    190,
    169,
    25,
    24,
    81,
    78,
    85,
    175,
    13,
    163,
    70,
    184,
    77,
    85,
    78,
    113,
    178,
    120,
    178,
    245,
    220,
    17,
    20,
    151,
    66,
    199,
    17,
    108,
    59,
    26,
    199,
    230,
    52,
    217,
    61,
    39,
    134,
    38,
    167,
    153,
    234,
    1,
    124,
    163,
    154,
    33,
    44,
    108,
    131,
    83,
    21,
    205,
    194,
    241,
    99,
    102,
    83,
    6,
    100,
    163,
    104,
    95,
    166,
    72,
    44,
    63,
    9,
    172,
    141,
    90,
    194,
    35,
    209,
    190,
    174,
    138,
    35,
    216,
    201,
    179,
    151,
    175,
    187,
    78,
    205,
    226,
    190,
    192,
    18,
    39,
    159,
    85,
    20,
    45,
    13,
    18,
    223,
    26,
    41,
    215,
    58,
    118,
    3,
    247,
    186,
    162,
    78,
    212,
    146,
    153,
    216,
    3,
    101,
    23,
    216,
    105,
    234,
    122,
    11,
    130,
    205,
    67,
    31,
    255,
    15,
    80,
    196,
    203,
    114,
    74,
    174,
    206,
    129,
    237,
    183,
    217,
    126,
    122,
    216,
    248,
    51,
    241,
    172,
    14,
    180,
    44,
    52,
    201,
    54,
    149,
    214,
    7,
    193,
    73,
    207,
    123,
    72,
    114,
    25,
    196,
    240,
    147,
    198,
    205,
    128,
    118,
    128,
    46,
    8,
    235,
    234,
    96,
    94,
    170,
    76,
    7,
    40,
    48,
    201,
    60,
    31,
    167,
    98,
    250,
    125,
    90,
    98,
    111,
    137,
    153,
    13,
    224,
    128,
    91,
    200,
    203,
    180,
    187,
    98,
    20,
    8,
    142,
    88,
    97,
    98,
    207,
    211,
    138,
    175,
    13,
    151,
    237,
    39,
    114,
    114,
    122,
    220,
    85,
    31,
    186,
    174,
    218,
    51,
    63,
    208,
    211,
    159,
    146,
    230,
    240,
    16,
    53,
    143,
    228,
    119,
    190,
    25,
    192,
    173,
    252,
    254,
    187,
    97,
    239,
    69,
    32,
    161,
    163,
    180,
    27,
    240,
    152,
    43,
    31,
    207,
    149,
    254,
    72,
    108,
    57,
    147,
    247,
    221,
    101,
    99,
    214,
    47,
    5,
    160,
    21,
    76,
    123,
    43,
    70,
    66,
    167,
    188,
    14,
    163,
    165,
    198,
    198,
    228,
    168,
    77,
    120,
    179,
    249,
    103,
    40,
    111,
    251,
    191,
    138,
    67,
    80,
    91,
    106,
    32,
    144,
    165,
    76,
    108,
    4,
    69,
    111,
    153,
    133,
    27,
    185,
    175,
    128,
    168,
    17,
    96,
    213,
    122,
    152,
    13,
    182,
    136,
    146,
    49,
    243,
    217,
    0,
    173,
    198,
    20,
    209,
    203,
    127,
    125,
    127,
    226,
    3,
    148,
    150,
    164,
    191,
    24,
    184,
    141,
    34,
    198,
    212,
    193,
    196,
    100,
    159,
    205,
    112,
    126,
    190,
    60,
    52,
    18,
    34,
    171,
    211,
    5,
    232,
    35,
    118,
    35,
    247,
    81,
    83,
    67,
    201,
    119,
    110,
    208,
    24,
    99,
    94,
    235,
    189,
    227,
    202,
    142,
    233,
    1,
    125,
    81,
    18,
    116,
    196,
    150,
    186,
    123,
    219,
    224,
    50,
    158,
    84,
    50,
    9,
    87,
    207,
    142,
    19,
    146,
    57,
    197,
    215,
    65,
    152,
    113,
    138,
    146,
    239,
    2,
    125,
    229,
    3,
    2,
    6,
    26,
    3,
    128,
    30,
    117,
    2,
    129,
    236,
    124,
    4,
    73,
    221,
    99,
    149,
    32,
    159,
    100,
    206,
    6,
    70,
    213,
    110,
    181,
    143,
    64,
    141,
    92,
    136,
    5,
    136,
    76,
    67,
    231,
    166,
    32,
    232,
    145,
    74,
    150,
    218,
    144,
    115,
    88,
    17,
    194,
    30,
    121,
    144,
    210,
    231,
    49,
    40,
    222,
    123,
    94,
    28,
    52,
    111,
    18,
    171,
    42,
    250,
    190,
    197,
    120,
    254,
    38,
    72,
    175,
    85,
    140,
    115,
    213,
    35,
    230,
    238,
    216,
    143,
    185,
    95,
    2,
    244,
    132,
    114,
    118,
    128,
    20,
    245,
    50,
    38,
    212,
    121,
    165,
    115,
    235,
    161,
    235,
    151,
    146,
    112,
    137,
    204,
    33,
    113,
    43,
    209,
    154,
    5,
    165,
    174,
    112,
    213,
    238,
    57,
    45,
    23,
    62,
    122,
    232,
    229,
    89,
    48,
    35,
    14,
    23,
    192,
    223,
    41,
    55,
    84,
    81,
    236,
    8,
    43,
    188,
    237,
    128,
    127,
    224,
    180,
    121,
    196,
    64,
    54,
    133,
    81,
    125,
    63,
    95,
    231,
    31,
    128,
    10,
    119,
    161,
    76,
    42,
    20,
    44,
    56,
    50,
    164,
    226,
    15,
    148,
    165,
    95,
    55,
    81,
    241,
    158,
    75,
    178,
    50,
    235,
    35,
    27,
    180,
    174,
    170,
    119,
    139,
    168,
    96,
    215,
    99,
    141,
    215,
    93,
    108,
    145,
    172,
    44,
    157,
    62,
    159,
    85,
    143,
    88,
    239,
    32,
    231,
    111,
    74,
    121,
    170,
    47,
    193,
    20,
    150,
    30,
    110,
    176,
    148,
    163,
    52,
    74,
    139,
    179,
    121,
    200,
    139,
    189,
    193,
    224,
    225,
    49,
    170,
    163,
    103,
    127,
    127,
    76,
    8,
    235,
    254,
    108,
    177,
    124,
    124,
    226,
    18,
    19,
    216,
    208,
    13,
    116,
    200,
    66,
    155,
    91,
    146,
    169,
    72,
    95,
    136,
    199,
    7,
    187,
    118,
    35,
    59,
    117,
    196,
    179,
    204,
    248,
    154,
    84,
    254,
    187,
    99,
    115,
    239,
    163,
    236,
    23,
    171,
    211,
    200,
    218,
    176,
    195,
    100,
    216,
    189,
    36,
    251,
    133,
    50,
    151,
    236,
    241,
    205,
    234,
    199,
    183,
    10,
    118,
    141,
    197,
    99,
    73,
    100,
    49,
    16,
    157,
    61,
    107,
    161,
    38,
    210,
    13,
    45,
    24,
    14,
    136,
    249,
    30,
    37,
    207,
    217,
    109,
    182,
    2,
    232,
    208,
    242,
    192,
    193,
    26,
    144,
    236,
    27,
    80,
    238,
    6,
    245,
    68,
    55,
    211,
    245,
    6,
    43,
    109,
    124,
    212,
    254,
    19,
    107,
    4,
    130,
    194,
    88,
    0,
    144,
    71,
    168,
    241,
    62,
    214,
    200,
    19,
    33,
    0,
    155,
    9,
    181,
    67,
    153,
    124,
    115,
    85,
    13,
    72,
    137,
    56,
    58,
    52,
    141,
    152,
    146,
    236,
    0,
    124,
    160,
    148,
    71,
    253,
    105,
    70,
    24,
    98,
    104,
    160,
    131,
    26,
    21,
    4,
    51,
    117,
    51,
    74,
    80,
    230,
    3,
    193,
    93,
    6,
    77,
    187,
    236,
    58,
    196,
    110,
    156,
    142,
    141,
    168,
    186,
    182,
    221,
    71,
    91,
    166,
    29,
    131,
    169,
    85,
    78,
    104,
    14,
    159,
    118,
    139,
    42,
    173,
    170,
    131,
    26,
    130,
    245,
    93,
    151,
    135,
    16,
    152,
    230,
    221,
    62,
    163,
    179,
    152,
    210,
    189,
    203,
    74,
    230,
    146,
    11,
    176,
    206,
    123,
    10,
    27,
    4,
    159,
    247,
    118,
    162
  ]);
  @override
  String get devSupabaseUrl => _get('DEV_SUPABASE_URL');

  @override
  String get devSupabaseKey => _get('DEV_SUPABASE_KEY');

  @override
  String get stageSupabaseUrl => _get('STAGE_SUPABASE_URL');

  @override
  String get stageSupabaseKey => _get('STAGE_SUPABASE_KEY');

  @override
  String get prodSupabaseUrl => _get('PROD_SUPABASE_URL');

  @override
  String get prodSupabaseKey => _get('PROD_SUPABASE_KEY');

  @override
  String get azureKey => _get('AZURE_KEY');

  @override
  String get azureRegion => _get('AZURE_REGION');

  T _get<T>(
    String key, {
    T Function(String)? fromString,
  }) {
    T _parseValue(String strValue) {
      if (T == String) {
        return (strValue) as T;
      } else if (T == int) {
        return int.parse(strValue) as T;
      } else if (T == double) {
        return double.parse(strValue) as T;
      } else if (T == bool) {
        return (strValue.toLowerCase() == 'true') as T;
      } else if (T == Enum || fromString != null) {
        if (fromString == null) {
          throw Exception('fromString is required for Enum');
        }

        return fromString(strValue.split('.').last);
      }

      throw Exception('Type ${T.toString()} not supported');
    }

    final encryptionKey = base64.decode(_encryptionKey.trim());
    final iv = base64.decode(_iv.trim());
    final decrypted =
        AESCBCEncryper.aesCbcDecrypt(encryptionKey, iv, _encryptedValues);
    final jsonMap = json.decode(decrypted) as Map<String, dynamic>;
    if (!jsonMap.containsKey(key)) {
      throw Exception('Key $key not found in .env file');
    }

    final encryptedValue = jsonMap[key] as String;
    final decryptedValue = AESCBCEncryper.aesCbcDecrypt(
      encryptionKey,
      iv,
      base64.decode(encryptedValue),
    );
    return _parseValue(decryptedValue);
  }
}
